import numpy as np
import matplotlib.pyplot as plt

value = [500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000]
data = [2.01,2.04,2.16,2.19,2.32,2.37,2.44,2.53,2.62,1.97,1.96,2.06,2.15,2.2,2.26,2.3,2.39,2.45,2.02,2.11,2.1,2.16,2.22,2.3,2.31,2.4,2.41,2.07,2.12,2.17,2.27,2.32,2.37,2.41,2.5,2.56,1.95,1.99,2.03,2.09,2.14,2.19,2.24,2.3,2.34]



print(np.polyfit(value,data,2))
little = np.polyfit(value,data,2)

value2 = [500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,1908000,2016000,2100000,2208000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,1908000,2016000,2100000,2208000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,1908000,2016000,2100000,2208000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,1908000,2016000,2100000,2208000,500000,667000,1000000,1200000,1398000,1512000,1608000,1704000,1800000,1908000,2016000,2100000,2208000]
data2 = [1.98,2.11,2.33,2.57,2.92,2.99,3.01,3.07,3.24,3.35,3.63,3.79,4,2.14,2.24,2.64,2.74,3.05,3.25,3.45,3.41,3.73,4.04,4.6,4.87,5.56,2.15,2.24,2.66,2.88,3.12,3.25,3.35,3.57,3.84,4.03,4.57,4.8,5.48,2.14,2.25,2.61,2.76,3.04,3.15,3.29,3.33,3.61,3.98,4.33,4.76,5.55,2.14,2.36,2.67,2.94,3.16,3.26,3.33,3.44,3.7,3.96,4.29,4.78,5.5]

print(np.polyfit(value2,data2,2))
big = np.polyfit(value2,data2,2)


list = []
for i in range(0,4):
    for j in range(0,3):
        for k in range(0,2):
            list.append((i,j,k))

list.remove((0,0,0));

def calc_model(values,big,little):
    sum = 0
    for (val,func) in zip(values,[big,little,0]):
        print(func)
        if  val == 0:
            sum += 0;
        elif val ==1:
            if type(func) == int:
                sum += 3 - 1.8
            else:
                sum += (np.polyval(func,[1200000])[0]) - 1.8
        elif 2:
            sum += (np.polyval(func,[1800000])[0]) - 1.8
        elif 3:
            sum += (np.polyval(func,[2208000])[0]) - 1.8
    return sum

sums = []
for i in list:
    sums.append(calc_model(i,big,little))
sort = zip(sums,list)
sort = sorted(sort, key = lambda x: x[0])
print(sort);
